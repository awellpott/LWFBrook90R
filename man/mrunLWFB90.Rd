% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mrunLWFB90.R
\name{mrunLWFB90}
\alias{mrunLWFB90}
\title{Make a multirun simulation using a variable input parameters.}
\usage{
mrunLWFB90(param.b90, options.b90, climate, soil = NULL,
  paramvar = NULL, paramvar_nms = names(paramvar),
  all_combinations = F, multirun.dir = "MultiRuns/",
  keep.subdirs = FALSE, cores = 3, showProgress = TRUE, ...)
}
\arguments{
\item{param.b90}{Named list of parameters to be used in all simulations, or list of lists with different parameter sets.}

\item{options.b90}{Named list of model control option to be used in all simulations, or list of lists with different options sets.}

\item{climate}{data.frame with climate data passed to \code{\link[runLWFB90]{runLWFB90}}, or a list of climate data.frames}

\item{soil}{data.frame with soil properties passed to \code{\link[runLWFB90]{runLWFB90}}, or a list of lists with different soil profiles}

\item{paramvar}{data.frame of variable input parameters with realisations for each single run.
The ith values replace the list elements in param.b90 of the ith simulation,
with the column names of paramvar being matched to the names in param.b90.
In order to match values from paramvar to data.frame or vector elements in param.b90,
the respective column name of paramvar has to be setup from the name and index.
E.g., in order to place the 2nd value of 'ths' in the soil_materials data.frame,
the respective column name of paramvar has to be called 'soil_materials.ths2'.
In order to replace the 3 value of pdur in param.b90, the column name has to be named 'pdur3'.}

\item{paramvar_nms}{names of the parameters in paramvar to be replaced in param.b90}

\item{all_combinations}{logical wether to set up all possible combinations of lists param.b90, options, climate and soil. See details.}

\item{multirun.dir}{the directory where to create the subdirectories for the the single runs. Default 'MultiRuns/'}

\item{keep.subdirs}{keep sub-directories of the single runs? Default is FALSE}

\item{cores}{number of cores to use for parallel processing}

\item{showProgress}{Show progressbar?}

\item{...}{Further arguments passed to \code{\link[runLWFB90]{runLWFB90}}.}
}
\value{
A named list with the results for the single runs. Simulation errors are passed on.
}
\description{
Repeatedly calls \code{\link[runLWFB90]{runLWFB90}} with varying input parameters in parallel,
stores the single run results in subdirectories and returns the results as a named list.
}
\examples{
#Set up lists containing model control options and model parameters:
param.b90 <- MakeParam.B90()
options.b90 <- MakeOptions.B90()

# Derive soil hydraulic properties from soil physical properties using pedotransfer functions
soil <- cbind(soil_slb1, hydpar_wessolek_mvg(soil_slb1$texture))

# Set start and end Dates for the simulation
options.b90$startdate <- as.Date("2000-01-01")
options.b90$enddate <- as.Date("2004-12-31")

# choose the 'Coupmodel' shape option for the annual lai dynamic, with fixed budburst and leaf fall dates:
options.b90$annuallaidyn <- 'Coupmodel'
options.b90$budburst <- 'fixed'
options.b90$leaffall <- 'fixed'

#set up data.frame with variable leaf area index parameters
n <- 10
vary_parms <- data.frame(maxlai = runif(n,4,8),
                         shapestart = runif(n, 0.1,1),
                         winlaifrac = runif(n, 0,0.5),
                         budburstdoy = runif(n,100,150),
                         optdoy =runif(n,180,240))

# Make a Multirun-Simulation
b90.multi <- MultiRun.B90(nRuns = n,
                     param_var = vary_parms,
                     param_const = param.b90,
                     options.b90 = options.b90,
                     soil = soil,
                     climate = meteo_slb1,
                     multirun.dir = "MultiRuns",
                     keep.subdirs = FALSE,
                     singlerun_names = paste0("result.",1:n),
                     cores = 3
                     )
}
